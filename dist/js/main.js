function enterRoomFromDirection(e){let o=null!==maze[playerPosition.y][playerPosition.x].encounter,n="";switch(e){case"north":n=o?"fromSouthEncounter":"arriveFromSouth";break;case"south":n=o?"fromNorthEncounter":"arriveFromNorth";break;case"east":n=o?"fromWestEncounter":"arriveFromWest";break;case"west":n=o?"fromEastEncounter":"arriveFromEast"}$(".hero").addClass(n),setTimeout(function(){o||($(".hero").removeClass(n),moveToCenter())},1e3),enterRoom()}function leaveRoomInDirection(e){let o="";switch(e){case"north":o="leaveToNorth";break;case"south":o="leaveToSouth";break;case"east":o="leaveToEast";break;case"west":o="leaveToWest"}$(".hero").addClass(o),setTimeout(function(){$(".hero").removeClass(o)},1e3)}function moveToCenter(){const e=$(".hero");var o,n={fromNorthEncounter:"toCenterFromNorth",fromSouthEncounter:"toCenterFromSouth",fromEastEncounter:"toCenterFromEast",fromWestEncounter:"toCenterFromWest"};for(o in n)if(e.hasClass(o)){e.addClass(n[o]).removeClass(o);break}setTimeout(function(){e.removeClass("toCenterFromNorth toCenterFromSouth toCenterFromEast toCenterFromWest")},1e3)}let mazeData=null,playerPosition={x:0,y:0},score=0,roomsVisited=0,duringGame=!1,duringEncounter=!1,question=!1,flagQuestion=!1,previousAnnouncement=null;const directions=["north","south","east","west"];let levelSelectWrapper=$(".maze__level-select"),levelSelect=$("#level"),menuTrolls=$(".dancing-troll"),menuHeader=$(".menu__heading"),scoreTotal=$("#score"),roomsTraveled=$("#rooms");const doors={north:'<span class="doors doors--north"></span>',east:'<span class="doors doors--east"></span>',south:'<span class="doors doors--south"></span>',west:'<span class="doors doors--west"></span>'};function loadMaze(){var e=levelSelect.val();$.ajax({url:"./maze-configs/"+e+".json",type:"GET",dataType:"json",success:function(e){initializeMaze(mazeData=e),updateMazeVisualization(),loadBackgroundImages(e.background)},error:function(){alert("Failed to load maze.")}})}function loadBackgroundImages(e){var o='<img class="maze__menu-background" src="'+e+'" alt="Background">';for(let e=1;e<5;e++)$("#maze").append(o),$(".maze__menu-background").last().addClass("maze__menu-background--"+e)}function hideMenuItems(){menuTrolls.hide(),levelSelectWrapper.hide(),menuHeader.hide()}function initializeMaze(e){mazeSize=e.mazeSize,maze=e.rooms,mazeEnemies=Object.keys(e.enemies),mazeTreasures=Object.keys(e.treasures),exit=getExitCoordinates(e);for(let o=0;o<mazeSize;o++)for(let e=0;e<mazeSize;e++)maze[o][e].visited=!1;for(;playerPosition.x=getRandomInt(mazeSize),playerPosition.y=getRandomInt(mazeSize),getDistance(playerPosition,exit)<3;);}function handleUserInput(e){"start"!==e||duringGame?"help"===e?toggleHelpModal():"start"===e&&duringGame?(previousAnnouncement=$("#announcer").text(),announce("Do you want to return to the main menu? Type 'yes' or 'no'."),question=!0):"flag"!==e||duringEncounter?flagQuestion?"red"===e||"green"===e||"yellow"===e?insertFlag(e):"cancel"===e?(flagQuestion=!1,announce(previousAnnouncement)):announce("Unknown flag color. Type 'red', 'green', 'yellow' or 'cancel' to cancel."):question?"yes"===e?(duringGame=!1,duringEncounter=!1,question=!1,resetGame(),announce("Game has been reset. Type 'start' to begin again.")):"no"===e?(question=!1,announce(previousAnnouncement)):encounterAnnounce("Please answer with 'yes' or 'no'."):directions.includes(e)?duringEncounter?encounterAnnounce("You can't leave until you've dealt with the encounter!"):movePlayer(e):duringEncounter?handleEncounterInput(e):announce("Unknown command. Type 'help' for more instructions."):(previousAnnouncement=$("#announcer").text(),announce("Insert flag for 100 points. Pick color, type 'red', 'green', 'yellow' or 'cancel' to cancel."),flagQuestion=!0):(duringGame=!0,resetGame(),hideMenuItems(),loadMaze(),announce("You are in a maze. Try to find the exit. Type 'help' for more instructions."))}function insertFlag(e){maze[playerPosition.y][playerPosition.x].flag=e+"-flag",flagQuestion=!1,updateScore(-100),encounterAnnounce(e+" flag set in this room!"),announce(previousAnnouncement),$("#maze").append('<img class="flag" src="./dist/assets/flags/'+e+'-flag.jpg" alt="Flag">')}function checkForFlag(){$(".flag").remove();var e=maze[playerPosition.y][playerPosition.x];e.flag&&(console.log(e.flag+"-flag no jest"),console.log($("#encounter")),$("#maze").append('<img class="flag" src="./dist/assets/flags/'+e.flag+'.jpg" alt="Flag">'))}function updateScore(e){score+=e,scoreTotal.text(score)}function toggleHelpModal(){$(".help-modal").toggleClass("hidden")}function handleEncounterInput(o){if(duringEncounter){var n=maze[playerPosition.y][playerPosition.x];if(a=n.encounter){var a,t=(a=Array.isArray(a)?a:[a])[0];let e;mazeData.enemies[t]?e=mazeData.enemies[t]:mazeData.treasures[t]?e=mazeData.treasures[t]:"exit"===t&&(e={action:"exit",victory:"You've found the exit! Congratulations."}),o===e.action?(encounterAnnounce(e.victory),$("#encounter").find("img:not(.defeated)").first().addClass("defeated"),a.shift(),mazeData.treasures[t]&&updateScore(mazeData.treasures[t].value),(0===a.length?(announce("Room cleared! Move on to the next room."),n.encounter=null,duringEncounter=!1,moveToCenter(),openDoors):handleEncounter)()):encounterAnnounce("Wrong action! Try again.")}}}function movePlayer(e){let o=playerPosition.x,n=playerPosition.y;switch(e){case"north":n--;break;case"south":n++;break;case"east":o++;break;case"west":o--}canMoveTo(o,n,e)?(leaveRoomInDirection(e),roomsVisited++,roomsTraveled.text(roomsVisited),setTimeout(function(){playerPosition.x=o,playerPosition.y=n,enterRoomFromDirection(e)},1e3)):announce("You can't go that way!")}function canMoveTo(e,o,n){return 0<=e&&0<=o&&e<mazeSize&&o<mazeSize&&maze[playerPosition.y][playerPosition.x].doors[n]}function updateMazeVisualization(){$(".doors").remove();var e=maze[playerPosition.y][playerPosition.x];for(const o in e.doors)e.doors[o]&&$("#maze").append(doors[o])}function enterRoom(){var e=maze[playerPosition.y][playerPosition.x];console.log(e.flag),encounterAnnounce(""),(e.visited||null===e.encounter?(announce("Nothing in this room"),updateMazeVisualization(),checkForFlag):($(".flag").remove(),e.visited=!0,updateMazeVisualization(),duringEncounter=!0,setTimeout(function(){closeDoors()},1e3),handleEncounter))(),renderMazeInConsole(),displayEncounter(e)}function handleEncounter(){var e=maze[playerPosition.y][playerPosition.x].encounter;e&&(e=(Array.isArray(e)?e:[e])[0],mazeEnemies.includes(e)?announce(mazeData.enemies[e].announcement):mazeTreasures.includes(e)?announce(mazeData.treasures[e].announcement):"exit"===e&&(announce("You've found the exit! Congratulations."),gameOver()))}function gameOver(){duringGame=!1,duringEncounter=!1,menuTrolls.show(),levelSelectWrapper.show(),menuHeader.show(),$(".hero").addClass("game-over"),$(".maze__score").addClass("game-over"),$(".maze__rooms").addClass("game-over"),$(".maze__menu-background").not(".dancing-troll").remove(),encounterAnnounce("Type start to play again.")}function getRandomInt(e){return Math.floor(Math.random()*e)}function getDistance(e,o){return Math.abs(e.x-o.x)+Math.abs(e.y-o.y)}function renderMazeInConsole(){let n="";for(let o=0;o<mazeSize;o++){for(let e=0;e<mazeSize;e++)0==e&&(n+="|"),playerPosition.y==o&&playerPosition.x==e?n+=" X ":n+="   ",n+="|";n=(n+="\n")+Array(4*mazeSize+1).join("_")+"\n"}console.log(n)}function displayEncounter(e){$("#encounter").empty(),e.encounter&&(Array.isArray(e.encounter)?e.encounter:[e.encounter]).forEach(e=>{mazeEnemies.includes(e)?$("#encounter").append(mazeData.enemies[e].image):mazeTreasures.includes(e)?$("#encounter").append(mazeData.treasures[e].image):"exit"===e&&$("#encounter").append('<img src="./dist/assets/exit.png" alt="Exit">')})}function getExitCoordinates(n){for(let o=0;o<n.mazeSize;o++)for(let e=0;e<n.mazeSize;e++)if("exit"===n.rooms[o][e].encounter)return{x:e,y:o};return null}function announce(e){$("#announcer").text(e)}function encounterAnnounce(e){$("#encounterAnnouncer").text(e)}function closeDoors(){$(".doors").addClass("closed")}function openDoors(){$(".doors").removeClass("closed")}function resetGame(){menuTrolls.show(),levelSelectWrapper.show(),menuHeader.show(),$(".hero").removeClass("game-over"),$(".maze__score").removeClass("game-over"),$(".maze__rooms").removeClass("game-over"),$(".maze__menu-background").not(".dancing-troll").remove(),$(".hero").attr("class","hero"),$("#encounter").empty(),maze=null,mazeData=null,playerPosition={x:0,y:0},score=0,roomsVisited=0,scoreTotal.text(score),roomsTraveled.text(roomsVisited)}$("#userInput").keypress(function(e){13===e.which&&(handleUserInput($(this).val().toLowerCase()),$(this).val(""))}),$(document).ready(function(){console.log($(".help-modal")),console.log($("#closeModal")),$("#closeModal").on("click",toggleHelpModal)});
//# sourceMappingURL=main.js.map
